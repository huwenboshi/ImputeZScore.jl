{
    "docs": [
        {
            "location": "/", 
            "text": "ImputeZScore.jl\n\n\nImputeZScore is a julia package for imputing GWAS summary association\nstatistics without the need to first perform genotype imputation.\n\n\nInstallation\n\n\nImputeZScore requires Julia 0.5. To install ImputeZScore please type\nthe following code in a Julia REPL:\n\n\nPkg.clone(\nhttps://github.com/huwenboshi/ImputeZScore.jl.git\n)\n\n\n\n\n\nUninstallation\n\n\nTo uninstall ImputeZScore please type the following code in\na Julia REPL:\n\n\nPkg.rm(\nImputeZScore\n)\n\n\n\n\n\nKey Features\n\n\n\n\nFast and accurate imputation of GWAS summary association statistics\n\n\nDoes not require individual-level data\n\n\n\n\nReference\n\n\nPasaniuc, Bogdan, Noah Zaitlen, Huwenbo Shi, Gaurav Bhatia, Alexander Gusev, Joseph Pickrell, Joel Hirschhorn, David P. Strachan, Nick Patterson, and Alkes L. Price. \"Fast and accurate imputation of summary statistics enhances evidence of functional enrichment.\" Bioinformatics 30, no. 20 (2014): 2906-2914.\n\n\nContact\n\n\nHuwenbo Shi\n (shihuwenbo [at] ucla [dot] edu)", 
            "title": "Home"
        }, 
        {
            "location": "/#imputezscorejl", 
            "text": "ImputeZScore is a julia package for imputing GWAS summary association\nstatistics without the need to first perform genotype imputation.", 
            "title": "ImputeZScore.jl"
        }, 
        {
            "location": "/#installation", 
            "text": "ImputeZScore requires Julia 0.5. To install ImputeZScore please type\nthe following code in a Julia REPL:  Pkg.clone( https://github.com/huwenboshi/ImputeZScore.jl.git )", 
            "title": "Installation"
        }, 
        {
            "location": "/#uninstallation", 
            "text": "To uninstall ImputeZScore please type the following code in\na Julia REPL:  Pkg.rm( ImputeZScore )", 
            "title": "Uninstallation"
        }, 
        {
            "location": "/#key-features", 
            "text": "Fast and accurate imputation of GWAS summary association statistics  Does not require individual-level data", 
            "title": "Key Features"
        }, 
        {
            "location": "/#reference", 
            "text": "Pasaniuc, Bogdan, Noah Zaitlen, Huwenbo Shi, Gaurav Bhatia, Alexander Gusev, Joseph Pickrell, Joel Hirschhorn, David P. Strachan, Nick Patterson, and Alkes L. Price. \"Fast and accurate imputation of summary statistics enhances evidence of functional enrichment.\" Bioinformatics 30, no. 20 (2014): 2906-2914.", 
            "title": "Reference"
        }, 
        {
            "location": "/#contact", 
            "text": "Huwenbo Shi  (shihuwenbo [at] ucla [dot] edu)", 
            "title": "Contact"
        }, 
        {
            "location": "/input_format/", 
            "text": "Input Format\n\n\nThis page describes the format of the input to ImputeZScore.\n\n\nGWAS summary association data\n\n\nFor each chromosome, ImputeZScore requires a single text file containing the\nfollowing columns in the input GWAS summary association data:\n\n\n\n\nSNP - rs ID of the SNP (e.g. rs62442).\n\n\nBP - Base pair position of the SNP.\n\n\nA1 - Effect allele of the SNP. The sign of the Z-score is with respect to this allele.\n\n\nA2 - The other allele of the SNP.\n\n\nZ - The Z-score of the SNP.\n\n\n\n\nGenome partition\n\n\nThe genome partition file should be in bed format, one for each chromosome. \n\n\nReference panel\n\n\nReference panels should be in \nPLINK format\n.\n\n\nThe following is a list of popular publicly available reference panels.\n\n\n\n\n1000 Genomes Project\n\n\nUK10K\n\n\n\n\nWe provide 1000 Genomes reference panel for Europeans \nhere\n.\nAll SNPs in this reference panel have minor allele frequency greater than 1%.", 
            "title": "Input Format"
        }, 
        {
            "location": "/input_format/#input-format", 
            "text": "This page describes the format of the input to ImputeZScore.", 
            "title": "Input Format"
        }, 
        {
            "location": "/input_format/#gwas-summary-association-data", 
            "text": "For each chromosome, ImputeZScore requires a single text file containing the\nfollowing columns in the input GWAS summary association data:   SNP - rs ID of the SNP (e.g. rs62442).  BP - Base pair position of the SNP.  A1 - Effect allele of the SNP. The sign of the Z-score is with respect to this allele.  A2 - The other allele of the SNP.  Z - The Z-score of the SNP.", 
            "title": "GWAS summary association data"
        }, 
        {
            "location": "/input_format/#genome-partition", 
            "text": "The genome partition file should be in bed format, one for each chromosome.", 
            "title": "Genome partition"
        }, 
        {
            "location": "/input_format/#reference-panel", 
            "text": "Reference panels should be in  PLINK format .  The following is a list of popular publicly available reference panels.   1000 Genomes Project  UK10K   We provide 1000 Genomes reference panel for Europeans  here .\nAll SNPs in this reference panel have minor allele frequency greater than 1%.", 
            "title": "Reference panel"
        }, 
        {
            "location": "/impute_zscore/", 
            "text": "Impute Z Score\n\n\nGetting Started\n\n\nDefault setting\n\n\nThe following simple script demonstrates the steps needed to perform an\nimputation across chromosomes 22.\n\n\n# load the GWAS summary association statistics of chromosome 22\n\n\nzsc_t\n \n=\n \nreadtable\n(\n./hdl_chr22_typed.zsc\n,\n \nseparator\n=\n \n)\n\n\n\n# load the 1000 Genomes Project reference panel\n\n\nrefpanel\n \n=\n \nSnpData\n(\n./1000G.EUR.22\n);\n\n\n\n# perform the imputation\n\n\nzsc_imp\n,\n \nzsc_t_flt\n \n=\n \nimpute_zscore\n(\nzsc_t\n,\n \nrefpanel\n)\n\n\n\n\n\n\nCustomized setting", 
            "title": "Impute Z Score"
        }, 
        {
            "location": "/impute_zscore/#impute-z-score", 
            "text": "", 
            "title": "Impute Z Score"
        }, 
        {
            "location": "/impute_zscore/#getting-started", 
            "text": "", 
            "title": "Getting Started"
        }, 
        {
            "location": "/impute_zscore/#default-setting", 
            "text": "The following simple script demonstrates the steps needed to perform an\nimputation across chromosomes 22.  # load the GWAS summary association statistics of chromosome 22  zsc_t   =   readtable ( ./hdl_chr22_typed.zsc ,   separator =   )  # load the 1000 Genomes Project reference panel  refpanel   =   SnpData ( ./1000G.EUR.22 );  # perform the imputation  zsc_imp ,   zsc_t_flt   =   impute_zscore ( zsc_t ,   refpanel )", 
            "title": "Default setting"
        }, 
        {
            "location": "/impute_zscore/#customized-setting", 
            "text": "", 
            "title": "Customized setting"
        }, 
        {
            "location": "/background/", 
            "text": "Background\n\n\nIn a traditional GWAS, one collects genotype data at a small subset of SNPs\nover some individuals, then imputes genotypes across the entire genome, and\nfinally computes association statistics (e.g. Z-scores) for each genotyped\nand imputed SNPs. This procedure can take tremendous amount of time as\ngenotype imputation is computationally extensive.\n\n\nHere, we impute Z-scores of ungenotyped SNPs directly from Z-scores of\ngenotyped SNPs, without first performing genotype imputation, saving hundreds\nof hours of CPU time. The idea behind this approach is that Z-scores of\ngenotyped and ungenotyped SNPs follow a multivariate normal distribution with\nLD matrix, which can be estimated from a reference panel, as the covariance\nstructure -- one can impute the Z-scores of ungenotyped SNPs as the\nexpectation of Z-scores of ungenotyped SNPs conditional on the Z-scores of\ngenotyped SNPs.\n\n\nIn detail, let \\(Z = (Z_t, Z_u)\\) be the Z-score vector partitioned into two\ncomponents, genotyped (\\(Z_t\\)) and ungenotyped (\\(Z_u\\)). It has been\npreviously shown that \\(Z\\) has the following distribution,\n\n\n\\left[\n\\begin{array}{c}\nZ_t \\\\\nZ_u\n\\end{array}\n\\right]\n\\sim\nMVN\n\\left(\n\\left[\n\\begin{array}{c}\n\\Lambda_t \\\\\n\\Lambda_u\n\\end{array}\n\\right]\n,\n\\left[\n\\begin{array}{cc}\n\\Sigma_{tt} & \\Sigma_{tu}\\\\\n\\Sigma_{ut} & \\Sigma_{uu}\n\\end{array}\n\\right]\n\\right),\n\n\nwhere \\( \\Lambda = (\\Lambda_t, \\Lambda_u)\\) is the non-centrality parameter,\n\\( \\Sigma_{tt} \\) the LD between genotyped SNPs, \\( \\Sigma_{tu}\\) the LD\nbetween genotyped and ungenotyped SNPs, \\(\\Sigma_{uu}\\) the LD between\nungenotyped SNPs.\n\n\nThe conditional expectation of \\( Z_u\\) given \\(Z_t\\) is then\n\n\nZ_u | Z_t\n\\sim\nMVN\n\\left(\n\\Lambda_u + \\Sigma_{ut} \\Sigma^{-1}_{tt} Z_t\n,\n\\Sigma_{uu} - \\Sigma_{ut} \\Sigma^{-1}_{tt} \\Sigma_{tu}\n\\right).\n\n\n\n\n\nWe impute the Z-scores of ungenotyped SNPs as\n\\(\\hat{Z}\nu=E[Z_u | Z_t]=\\Sigma\n{ut} \\Sigma^{-1}\n{tt} Z_t \\) under the\nnull assumption that \\(\\Lambda_u = 0\\). Let\n\\(W = \\Sigma\n{ut} \\Sigma^{-1}\n{tt}\\). This can be viewed as the weights on\nZ-scores of genotyped SNPs in the imputation of Z-scores of ungenotyped SNPs.\nThen \n\n\n\\hat{Z}_u \\sim MVN (0, \\Sigma_{ut} \\Sigma^{-1}_{tt} \\Sigma_{tu}),\n\n\nwhere each entry $\\hat{Z}\n{u,i}$ of $\\hat{Z}\nu$ follows\n\n\n\\hat{Z}_{u,i} \\sim N (0, \\Sigma_{ut,i*} \\Sigma^{-1}_{tt} \\Sigma_{tu,*i}).\n\n\nHere, \\(\\Sigma\n{ut,i\n}\\) denotes the \\(i\\)-th row of \\(\\Sigma_{ut}\\) and\n\\(\\Sigma_{tu,\ni}\\) the \\(i\\)-th column of \\(\\Sigma_{tu}\\). To obtain an\nassociations statistics that has mean 0 and variance 1, we standardize\n\\(\\hat{Z}\n{u,i}\\) by\n\\(\\sqrt{\\Sigma\n{ut,i\n} \\Sigma^{-1}\n{tt} \\Sigma\n{tu,\ni}}\\). More\nspecifically, the final imputated association statistics of each SNP is\n\n\n\\hat{Z}_{imp,i} = {\\hat{Z}_{u,i} \\over \\sqrt{\\Sigma_{ut,i*} \\Sigma^{-1}_{tt} \\Sigma_{tu,*i}}}\n\\sim N(0, 1).\n\n\n\n\n\nIn practice, inverting a large matrix can be time-consuming. Instead, we adopt\na window-based approach, i.e. we impute Z-scores of ungenotyped SNPs one\nwindow at a time.", 
            "title": "Background"
        }, 
        {
            "location": "/background/#background", 
            "text": "In a traditional GWAS, one collects genotype data at a small subset of SNPs\nover some individuals, then imputes genotypes across the entire genome, and\nfinally computes association statistics (e.g. Z-scores) for each genotyped\nand imputed SNPs. This procedure can take tremendous amount of time as\ngenotype imputation is computationally extensive.  Here, we impute Z-scores of ungenotyped SNPs directly from Z-scores of\ngenotyped SNPs, without first performing genotype imputation, saving hundreds\nof hours of CPU time. The idea behind this approach is that Z-scores of\ngenotyped and ungenotyped SNPs follow a multivariate normal distribution with\nLD matrix, which can be estimated from a reference panel, as the covariance\nstructure -- one can impute the Z-scores of ungenotyped SNPs as the\nexpectation of Z-scores of ungenotyped SNPs conditional on the Z-scores of\ngenotyped SNPs.  In detail, let \\(Z = (Z_t, Z_u)\\) be the Z-score vector partitioned into two\ncomponents, genotyped (\\(Z_t\\)) and ungenotyped (\\(Z_u\\)). It has been\npreviously shown that \\(Z\\) has the following distribution, \n\\left[\n\\begin{array}{c}\nZ_t \\\\\nZ_u\n\\end{array}\n\\right]\n\\sim\nMVN\n\\left(\n\\left[\n\\begin{array}{c}\n\\Lambda_t \\\\\n\\Lambda_u\n\\end{array}\n\\right]\n,\n\\left[\n\\begin{array}{cc}\n\\Sigma_{tt} & \\Sigma_{tu}\\\\\n\\Sigma_{ut} & \\Sigma_{uu}\n\\end{array}\n\\right]\n\\right), \nwhere \\( \\Lambda = (\\Lambda_t, \\Lambda_u)\\) is the non-centrality parameter,\n\\( \\Sigma_{tt} \\) the LD between genotyped SNPs, \\( \\Sigma_{tu}\\) the LD\nbetween genotyped and ungenotyped SNPs, \\(\\Sigma_{uu}\\) the LD between\nungenotyped SNPs.  The conditional expectation of \\( Z_u\\) given \\(Z_t\\) is then \nZ_u | Z_t\n\\sim\nMVN\n\\left(\n\\Lambda_u + \\Sigma_{ut} \\Sigma^{-1}_{tt} Z_t\n,\n\\Sigma_{uu} - \\Sigma_{ut} \\Sigma^{-1}_{tt} \\Sigma_{tu}\n\\right).   We impute the Z-scores of ungenotyped SNPs as\n\\(\\hat{Z} u=E[Z_u | Z_t]=\\Sigma {ut} \\Sigma^{-1} {tt} Z_t \\) under the\nnull assumption that \\(\\Lambda_u = 0\\). Let\n\\(W = \\Sigma {ut} \\Sigma^{-1} {tt}\\). This can be viewed as the weights on\nZ-scores of genotyped SNPs in the imputation of Z-scores of ungenotyped SNPs.\nThen  \n\\hat{Z}_u \\sim MVN (0, \\Sigma_{ut} \\Sigma^{-1}_{tt} \\Sigma_{tu}), \nwhere each entry $\\hat{Z} {u,i}$ of $\\hat{Z} u$ follows \n\\hat{Z}_{u,i} \\sim N (0, \\Sigma_{ut,i*} \\Sigma^{-1}_{tt} \\Sigma_{tu,*i}). \nHere, \\(\\Sigma {ut,i }\\) denotes the \\(i\\)-th row of \\(\\Sigma_{ut}\\) and\n\\(\\Sigma_{tu, i}\\) the \\(i\\)-th column of \\(\\Sigma_{tu}\\). To obtain an\nassociations statistics that has mean 0 and variance 1, we standardize\n\\(\\hat{Z} {u,i}\\) by\n\\(\\sqrt{\\Sigma {ut,i } \\Sigma^{-1} {tt} \\Sigma {tu, i}}\\). More\nspecifically, the final imputated association statistics of each SNP is \n\\hat{Z}_{imp,i} = {\\hat{Z}_{u,i} \\over \\sqrt{\\Sigma_{ut,i*} \\Sigma^{-1}_{tt} \\Sigma_{tu,*i}}}\n\\sim N(0, 1).   In practice, inverting a large matrix can be time-consuming. Instead, we adopt\na window-based approach, i.e. we impute Z-scores of ungenotyped SNPs one\nwindow at a time.", 
            "title": "Background"
        }
    ]
}